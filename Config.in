config FREETZ_PACKAGE_DECODER
	bool "decoder 0.4"
	select FREETZ_LIB_libcrypto if ! FREETZ_PACKAGE_DECODER_STATIC
	default y
	help
		decrypt AVM cipher text - see https://github.com/PeterPawn/decoder

		It's a multi-call binary and you have to select the functions to install.

config FREETZ_PACKAGE_DECODER_DYNAMIC
	depends on FREETZ_PACKAGE_DECODER
	bool "build dynamically linked binary"
	default n
	help
		Build the utility as a binary, which uses DSO's for smaller files.

config FREETZ_PACKAGE_DECODER_LIBCRYPTO
	depends on FREETZ_PACKAGE_DECODER
	bool "use OpenSSL's libcrypto instead of an own libnettle version"
	default n
	help
		This is the smallest binary, but with the most dependencies on other libraries.

menu "symlinks to create for 'decoder'"
	depends on FREETZ_PACKAGE_DECODER

config FREETZ_PACKAGE_DECODER_DECODE_SECRETS
	depends on FREETZ_PACKAGE_DECODER
	bool "decode_secrets - decrypt cipher-text values"
	default y
	help
		This is a filter and copies all data from STDIN to STDOUT while decryptable 
		cipher-text occurrences are replaced with their clear-text values.

config FREETZ_PACKAGE_DECODER_DECODE_EXPORT
	depends on FREETZ_PACKAGE_DECODER
	bool "decode_export - decrypt settings export files"
	default n
	help
		This is a filter and copies all data from STDIN to STDOUT while decryptable 
		cipher-text occurrences are replaced with their clear-text values.
		It's a replacement for 'decode_secrets' with automatic handling of the special
		encryption for the export password.

config FREETZ_PACKAGE_DECODER_DECODE_CRYPTEDBINFILE
	depends on FREETZ_PACKAGE_DECODER
	bool "decode_cryptedbinfile - decrypt data portion of encrypted file sections within an export file"
	default n
	help
		This is a filter and decrypts the content (hexadecimal or - starting with FRITZ!OS 07.19 -
		Base64 encoded strings) from an encrypted entry (CRYPTEDBINFILE or CRYPTEDB64FILE) in an
		exported settings file.

config FREETZ_PACKAGE_DECODER_DECODE_SECRET
	depends on FREETZ_PACKAGE_DECODER
	bool "decode_secret - decrypt a single value"
	default n
	help
		This function expects the encrypted data and the key as command line arguments.

config FREETZ_PACKAGE_DECODER_SPLIT_EXPORT
	depends on FREETZ_PACKAGE_DECODER
	bool "split_export - split a complete FRITZ!OS settings export into the contained settings files"
	default n

config FREETZ_PACKAGE_DECODER_USER_PASSWORD
	depends on FREETZ_PACKAGE_DECODER
	bool "user_password - create a decryption key from a specified password"
	default n

config FREETZ_PACKAGE_DECODER_DEVICE_PASSWORD
	depends on FREETZ_PACKAGE_DECODER
	bool "device_password - create a decryption key from specified device properties"
	default n

config FREETZ_PACKAGE_DECODER_PASSWORD_FROM_DEVICE
	depends on FREETZ_PACKAGE_DECODER
	bool "password_from_device - create a decryption key from device properties"
	default n

config FREETZ_PACKAGE_DECODER_DECODE_PASSWORDS
	depends on FREETZ_PACKAGE_DECODER
	bool "decode_passwords - this is an older synonym for 'decode_secrets'"
	default n

config FREETZ_PACKAGE_DECODER_HEXUTIL
	depends on FREETZ_PACKAGE_DECODER
	bool "hexdec/hexenc - convert from hexadecimal to binary and vice versa"
	default n

config FREETZ_PACKAGE_DECODER_B64UTIL
	depends on FREETZ_PACKAGE_DECODER
	bool "b64dec/b64enc - convert from Base64 to binary and vice versa"
	default n

config FREETZ_PACKAGE_DECODER_B32UTIL
	depends on FREETZ_PACKAGE_DECODER
	bool "b32dec/b32enc - convert from Base32 to binary and vice versa"
	default n

endmenu
